exports[`test render should not render title if name is not set 1`] = `<section />`;

exports[`test render should render component 1`] = `
<section>
  <_class
    level={1}
    slug="foo">
    Foo
  </_class>
  <Examples
    examples={
      Array [
        Object {
          "content": "<button>OK</button>",
          "evalInContext": [Function],
          "type": "code",
        },
        Object {
          "content": "Hello *world*!",
          "type": "markdown",
        },
      ]
    } />
  <Components
    components={Array []} />
  <Sections
    sections={Array []} />
</section>
`;

exports[`test render should render title if name is set 1`] = `
<section>
  <h1
    class="heading-2948884764"
    id="test">
    <a
      aria-hidden="true"
      class="anchor-3977085326"
      href="#test">
      #
    </a>
    test
  </h1>
</section>
`;

exports[`test should not render components list if not defined 1`] = `
<_class
  name="No components"
  slug="no-components" />
`;

exports[`test should not render sections if not defined 1`] = `
<_class
  name="No sections"
  slug="no-sections" />
`;

exports[`test should render component renderer 1`] = `
<_class
  components={
    <Components
      components={Array []} />
  }
  content={
    <Examples
      examples={
        Array [
          Object {
            "content": "<button>OK</button>",
            "evalInContext": [Function],
            "type": "code",
          },
          Object {
            "content": "Hello *world*!",
            "type": "markdown",
          },
        ]
      } />
  }
  name="Foo"
  sections={
    <Sections
      sections={Array []} />
  }
  slug="foo" />
`;

exports[`test should render components list 1`] = `
<_class
  components={
    <Components
      components={Array []} />
  }
  name="Components"
  slug="components" />
`;

exports[`test should render sections if defined 1`] = `
<_class
  name="Nested sections"
  sections={
    <Sections
      sections={Array []} />
  }
  slug="nested-sections" />
`;
