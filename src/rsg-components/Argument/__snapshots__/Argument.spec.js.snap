// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render argument 1`] = `
<Group
  separator=" "
>
  <span>
    <Consumer(Name)>
      Foo
    </Consumer(Name)>
    :
  </span>
  <Consumer(Type)>
    Array
  </Consumer(Type)>
   — 
  <Markdown
    inline={true}
    text="Converts foo to bar"
  />
</Group>
`;

exports[`should render argument without description 1`] = `
<Group
  separator=" "
>
  <span>
    <Consumer(Name)>
      Foo
    </Consumer(Name)>
    :
  </span>
  <Consumer(Type)>
    Array
  </Consumer(Type)>
</Group>
`;

exports[`should render argument without type 1`] = `
<Group
  separator=" "
>
  <span>
    <Consumer(Name)>
      Foo
    </Consumer(Name)>
  </span>
  <Markdown
    inline={true}
    text="Converts foo to bar"
  />
</Group>
`;

exports[`should render default value of argument 1`] = `
<Group
  default="bar"
  separator=" "
>
  <Consumer(Type)>
    String
    =bar
  </Consumer(Type)>
   — 
  <Markdown
    inline={true}
    text="Converts foo to bar"
  />
</Group>
`;

exports[`should render default value of optional argument 1`] = `
<Group
  default="true"
  separator=" "
>
  <Consumer(Type)>
    Boolean
    ?
    =true
  </Consumer(Type)>
   — 
  <Markdown
    inline={true}
    text="Converts foo to bar"
  />
</Group>
`;

exports[`should render optional argument 1`] = `
<Group
  separator=" "
>
  <Consumer(Type)>
    Array
    ?
  </Consumer(Type)>
   — 
  <Markdown
    inline={true}
    text="Converts foo to bar"
  />
</Group>
`;

exports[`should render return value 1`] = `
<Group
  separator=" "
>
  Returns
  <Consumer(Type)>
    Array
  </Consumer(Type)>
   — 
  <Markdown
    inline={true}
    text="Converts foo to bar"
  />
</Group>
`;

exports[`should render with block styles 1`] = `
<Group
  className="block"
  separator=" "
/>
`;
