// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PropsRenderer should render a table 1`] = `
<Styled(Table)
  columns={
    Array [
      Object {
        "caption": "Prop name",
        "render": [Function],
      },
      Object {
        "caption": "Type",
        "render": [Function],
      },
      Object {
        "caption": "Default",
        "render": [Function],
      },
      Object {
        "caption": "Description",
        "render": [Function],
      },
    ]
  }
  getRowKey={[Function]}
  rows={
    Array [
      Object {
        "description": "",
        "name": "color",
        "required": false,
        "type": Object {
          "name": "string",
        },
      },
    ]
  }
/>
`;

exports[`props columns should render PropTypes.arrayOf 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        colors
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        string[]
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.arrayOf(PropTypes.shape) 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        foos
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        shape[]
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <Styled(Para)>
          <div>
            <Styled(Name)>
              bar
            </Styled(Name)>
            : 
            <Styled(Type)>
              number
            </Styled(Type)>
          </div>
          <div>
            <Styled(Name)>
              baz
            </Styled(Name)>
            : 
            <Styled(Type)>
              any
            </Styled(Type)>
          </div>
        </Styled(Para)>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.instanceOf 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        num
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        Number
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.objectOf 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        colors
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        {string}
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.objectOf(PropTypes.shape) 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        colors
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        {shape}
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <Styled(Para)>
          <div>
            <Styled(Name)>
              bar
            </Styled(Name)>
            : 
            <Styled(Type)>
              number
            </Styled(Type)>
             — 
            <Styled(Text)>
              Required
            </Styled(Text)>
          </div>
          <div>
            <Styled(Name)>
              baz
            </Styled(Name)>
            : 
            <Styled(Type)>
              any
            </Styled(Type)>
          </div>
        </Styled(Para)>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.oneOf 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        size
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        enum
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <Styled(Para)>
          <span>
            One of:
             
            <Group
              inline={true}
              separator=", "
            >
              <Styled(Code)>
                small
              </Styled(Code)>
              <Styled(Code)>
                normal
              </Styled(Code)>
              <Styled(Code)>
                large
              </Styled(Code)>
            </Group>
          </span>
        </Styled(Para)>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.oneOfType 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        union
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        union
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <Styled(Para)>
          <span>
            One of type:
             
            <Group
              inline={true}
              separator=", "
            >
              <Styled(Type)>
                string
              </Styled(Type)>
              <Styled(Type)>
                number
              </Styled(Type)>
            </Group>
          </span>
        </Styled(Para)>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.shape 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        foo
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        shape
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <Styled(Para)>
          <div>
            <Styled(Name)>
              bar
            </Styled(Name)>
            : 
            <Styled(Type)>
              number
            </Styled(Type)>
             — 
            <Styled(Text)>
              Required
            </Styled(Text)>
          </div>
          <div>
            <Styled(Name)>
              baz
            </Styled(Name)>
            : 
            <Styled(Type)>
              any
            </Styled(Type)>
          </div>
        </Styled(Para)>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.shape with description 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        foo
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        shape
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <Styled(Para)>
          <div>
            <Styled(Name)>
              bar
            </Styled(Name)>
            : 
            <Styled(Type)>
              number
            </Styled(Type)>
             — 
            <Styled(Text)>
              Required
            </Styled(Text)>
             — 
            <Styled(Markdown)
              inline={true}
              text="Number"
            />
          </div>
          <div>
            <Styled(Name)>
              baz
            </Styled(Name)>
            : 
            <Styled(Type)>
              any
            </Styled(Type)>
             — 
            <Styled(Markdown)
              inline={true}
              text="Any"
            />
          </div>
        </Styled(Para)>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.shape with formatted defaultProps 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        foo
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        shape
      </Styled(Type)>
    </div>
    <div>
      <Styled(Text)
        title="{
        bar: 123,
        baz: baz() {
                return 'foo';
            },
        bing: bing() {
                return 'badaboom';
            },
        trotskij: () => 1935,
        qwarc: {
          si: 'señor'
        }
      }"
        underlined={true}
      >
        Shape
      </Styled(Text)>
    </div>
    <div>
      <div>
        <Styled(Para)>
          <div>
            <Styled(Name)>
              bar
            </Styled(Name)>
            : 
            <Styled(Type)>
              number
            </Styled(Type)>
             — 
            <Styled(Text)>
              Required
            </Styled(Text)>
          </div>
          <div>
            <Styled(Name)>
              baz
            </Styled(Name)>
            : 
            <Styled(Type)>
              any
            </Styled(Type)>
          </div>
        </Styled(Para)>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.string 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        color
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        string
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.string with a default value 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        color
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        string
      </Styled(Type)>
    </div>
    <div>
      <Styled(Code)>
        pink
      </Styled(Code)>
    </div>
    <div>
      <div>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render PropTypes.string.isRequired 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        color
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        string
      </Styled(Type)>
    </div>
    <div>
      <Styled(Text)>
        Required
      </Styled(Text)>
    </div>
    <div>
      <div>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render arguments from JsDoc tags 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        size
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        number
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <Styled(Markdown)
          text="Test description"
        />
        <JsDoc
          arg={
            Array [
              Object {
                "description": "Converts foo to bar",
                "name": "Foo",
                "type": Object {
                  "name": "Array",
                },
              },
            ]
          }
          param={
            Array [
              Object {
                "name": "Bar",
              },
            ]
          }
        />
        <Styled(Arguments)
          args={
            Array [
              Object {
                "description": "Converts foo to bar",
                "name": "Foo",
                "type": Object {
                  "name": "Array",
                },
              },
              Object {
                "name": "Bar",
              },
            ]
          }
          heading={true}
        />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render description in Markdown 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        color
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        string
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <Styled(Markdown)
          text="Label"
        />
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render function body in tooltip 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        fn
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        func
      </Styled(Type)>
    </div>
    <div>
      <Styled(Text)
        title="(e) => console.log(e)"
        underlined={true}
      >
        Function
      </Styled(Text)>
    </div>
    <div>
      <div>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render name as deprecated when tag deprecated is present 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={true}
      >
        size
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        number
      </Styled(Type)>
    </div>
    <div />
    <div>
      <div>
        <Styled(Markdown)
          text="Test description"
        />
        <JsDoc
          deprecated={
            Array [
              Object {
                "description": "Do not use.",
                "title": "deprecated",
              },
            ]
          }
        />
      </div>
    </div>
  </li>
</ul>
`;

exports[`props columns should render unknown proptype for a prop when a relevant proptype is not assigned 1`] = `
<ul>
  <li>
    <div>
      <Styled(Name)
        deprecated={false}
      >
        color
      </Styled(Name)>
    </div>
    <div>
      <Styled(Type)>
        unknown
      </Styled(Type)>
    </div>
    <div>
      <Styled(Code)>
        pink
      </Styled(Code)>
    </div>
    <div>
      <div>
        <JsDoc />
      </div>
    </div>
  </li>
</ul>
`;
